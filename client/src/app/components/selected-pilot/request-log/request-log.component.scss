.step-card {
  padding: 1rem;
  border: 2px solid var(--text-muted);
  border-radius: 8px;
  background-color: var(--bg-inactive);
  display: flex;
  flex-direction: column;
  gap: 0.75rem;
  box-shadow: 0 0 6px rgba(0, 0, 0, 0.3);
  cursor: pointer;
  max-height: fit-content;
  overflow: hidden;
  transition: max-height 0.4s ease, padding 0.3s ease, background-color 0.3s ease;
  position: relative;
  transition: background-color 0.3s ease, box-shadow 0.2s ease;

  &.expanded {
    background-color: var(--bg-secondary);
    border-color: var(--color-active);
    max-height: 800px;
    padding-bottom: 1rem;
  }

  &:hover {
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.5);
  }

  .step-top {
    display: flex;
    align-items: center;
    justify-content: space-between;
    gap: 1rem;
    font-size: 0.875rem;
  }

  .step-label {
    font-weight: 600;
    flex: 1;
    color: var(--color-primary);
    font-variant: all-small-caps;
    font-size: 1.2rem;
  }

  .step-status {
    font-weight: 600;
    text-transform: uppercase;
    padding: 0.25rem 0.5rem;
    border-radius: 8px;
    font-size: 0.7rem;
    border: 1px solid;
  }

  .step-time {
    font-style: italic;
    color: var(--text-primary);
    font-size: 0.85rem;
    white-space: nowrap;
  }

  .step-message {
    font-weight: 600;
    font-size: 1rem;
    color: var(--text-primary);
  }

  .step-expanded {
    display: flex;
    flex-direction: column;
    animation: fadeSlideDown 0.2s ease-in-out;
    gap: 0.5rem;

    .smart-responses,
    .quick-responses {
      display: grid;
      gap: .4rem;
    }

    .smart-responses {
      margin: 1rem 0;
    }

    .chips {
      display: flex;
      flex-wrap: wrap;
      gap: .4rem;

    }

    .direction-buttons {
      display: flex;
      gap: 0.5rem;
    }

    /* QUICK RESPONSES */
    .qa-buttons {
      display: flex;
      flex-wrap: wrap;
      gap: 0.5rem;
    }

    .chip {
      flex: 1;
      background: var(--bg-body);
      border: 1px solid var(--text-muted);
      color: var(--text-primary);
      padding: 0.85rem 1.1rem;
      border-radius: 999px;
      font-size: 0.9rem;
      font-weight: 600;
      font-family: 'Segoe UI', 'Roboto', sans-serif;
      line-height: 1.2;
      white-space: nowrap;
      cursor: pointer;
      transition: 
        background-color 0.2s ease,
        border-color 0.2s ease,
        color 0.2s ease,
        box-shadow 0.2s ease;
    
      display: inline-flex;
      align-items: center;
      justify-content: center;
    
      &:hover {
        background-color: var(--bg-hover);
        border-color: var(--color-responded);
        box-shadow: 0 0 0 2px color-mix(in srgb, var(--color-responded) 20%, transparent);
      }
    
      &:active {
        background-color: var(--color-responded);
        color: #fff;
        border-color: var(--color-active);
        box-shadow: inset 0 2px 4px rgba(0, 0, 0, 0.1);
      }
    
      &:focus-visible {
        outline: 2px solid var(--color-responded);
        outline-offset: 3px;
      }
    
      &:disabled {
        background-color: var(--text-muted);
        color: var(--text-secondary);
        border-color: var(--text-muted);
        cursor: not-allowed;
        opacity: 0.6;
      }
    }
    
    .chip.selected {
      background-color: var(--bg-responded);
      color: white;
      border-color: var(--color-responded);
      box-shadow: 0 0 0 2px color-mix(in srgb, var(--color-responded) 25%, transparent);
    
      &:focus-visible {
        outline: 2px solid var(--color-responded);
        outline-offset: 3px;
      }
    }

    label {
      font-size: 0.8rem;
      color: var(--text-secondary);
    }

    textarea {
      resize: vertical;
      min-height: 50px;
      max-height: 180px;
      padding: 0.6rem 0.75rem;
      font-size: 1rem;
      line-height: 1.4;
      border: 1px solid var(--text-muted);
      border-radius: 6px;
      background-color: var(--bg-body);
      color: var(--text-primary);
      font-family: inherit;
      transition: border-color 0.2s ease, box-shadow 0.2s ease, background-color 0.2s ease;
    
      &:focus {
        border-color: var(--color-active);
        outline: none;
        box-shadow: 0 0 0 3px color-mix(in srgb, var(--color-active) 20%, transparent);
      }
    
      &::placeholder {
        color: var(--text-secondary);
        opacity: 0.8;
        font-style: italic;
      }
    }

    .response-footer {
      display: flex;
      justify-content: space-between;
      align-items: center;
      margin-top: 0.75rem;
      gap: 0.75rem;
    
      .compose-hint {
        font-size: 0.75rem;
        font-style: italic;
        color: var(--text-secondary);
        white-space: nowrap;
      }
    
      .right-side {
        display: flex;
        align-items: center;
        gap: 0.75rem;
    
        .char-counter {
          font-size: 0.75rem;
          color: var(--text-secondary);
          opacity: 0.85;
          white-space: nowrap;
        }
    
        .send-btn {
          display: inline-flex;
          align-items: center;
          justify-content: center;
          background-color: var(--bg-body);
          border: 1px solid var(--text-muted);
          color: var(--text-primary);
          padding: 0.5rem 1.2rem;
          font-size: 0.75rem;
          font-weight: 600;
          font-family: inherit;
          text-transform: uppercase;
          border-radius: 6px;
          transition: background-color 0.2s ease, transform 0.1s ease, box-shadow 0.2s ease;
          box-shadow: 0 2px 4px rgba(0, 0, 0, 0.15);
          cursor: pointer;
          gap: 0.5rem;
    
          &:hover {
            background-color: var(--bg-hover);
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.2);
          }
    
          &:active {
            transform: translateY(1px);
            box-shadow: none;
          }
    
          &:focus-visible {
            outline: 2px solid var(--color-responded);
            outline-offset: 2px;
          }
    
          &:disabled {
            background-color: var(--text-muted);
            color: var(--text-secondary);
            cursor: not-allowed;
            opacity: 0.6;
            box-shadow: none;
          }

          svg.send-icon {
            display: inline-block;
            vertical-align: middle;
            transition: transform 0.2s ease;
            fill: var(--text-primary);
          }
        
          &:hover svg.send-icon {
            transform: translateX(2px);
          }
        
          &:disabled svg.send-icon {
            fill: var(--text-secondary);
          }
        }
      }
    }
  }
}

@keyframes fadeSlideDown {
  from { opacity: 0.5; transform: translateY(-2px); }
  to   { opacity: 1;   transform: translateY(0); }
}

$step-status-styles: (
  responded: (color: var(--color-responded), bg: var(--bg-responded)),
  standby:   (color: var(--color-responded), bg: var(--bg-responded)),
  new:       (color: var(--color-new),       bg: var(--bg-new)),
  loaded:    (color: var(--color-active),    bg: var(--bg-active)),
  executed:  (color: var(--color-active),    bg: var(--bg-active)),
  closed:    (color: var(--color-closed),    bg: var(--bg-closed)),
  timeout:   (color: var(--color-inactive),  bg: var(--bg-inactive)),
  cancelled: (color: var(--color-inactive),  bg: var(--bg-inactive)),
  error:     (color: var(--color-inactive),  bg: var(--bg-inactive)),
  cancel:    (color: var(--color-inactive),  bg: var(--bg-inactive)),
  unable:    (color: var(--color-inactive),  bg: var(--bg-inactive))
);

@each $status, $props in $step-status-styles {
  .step-card.#{$status} {
    border-color: map-get($props, color);
    background-color: map-get($props, bg);

    .step-label {
      color: map-get($props, color);
    }
  }
}

.step-card.idle {
  border: 1px dashed var(--text-secondary);
  background-color: var(--bg-body);
}

.step-card.closed .step-message {
  color: var(--text-secondary);
}

.step-card.non-expandable {
  cursor: default;
}

/* Pastilles statut */
.step-status.responded { color: var(--color-responded); }
.step-status.standby { color: var(--color-responded); }

.step-status.new { color: var(--color-new); }

.step-status.loaded,
.step-status.executed { color: var(--color-active); }

.step-status.closed { color: var(--color-closed); }

.step-status.timeout,
.step-status.cancelled,
.step-status.error,
.step-status.idle,
.step-status.cancel,
.step-status.unable { color: var(--color-inactive); }
